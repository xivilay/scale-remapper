name: CMake

on:
  push:
    tags:
      - '*'
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  PROJECT_NAME: ScaleRemapper

jobs:
  build:
    strategy:
      matrix:
        runner: ['windows']
    runs-on: ${{ matrix.runner }}-latest
    name: ${{ matrix.runner }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          token: ${{secrets.GH_PAT}}
          submodules: 'recursive'

      - name: Set Up Node.js
        uses: actions/setup-node@v2

      - name: Set Up Yarn
        run: npm install -g yarn

      - name: Install UI Dependencies
        working-directory: ./ui
        run: yarn install

      - name: Build UI Bundle
        working-directory: ./ui
        run: yarn build
        
      - name: Install Linux Deps
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update && sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Zip
        working-directory: ${{github.workspace}}/build/${{env.PROJECT_NAME}}_artefacts/${{env.BUILD_TYPE}}
        run: cmake -E tar cv ${{github.workspace}}/build/${{env.PROJECT_NAME}}_${{ matrix.runner }}.7z --format=7zip VST3/${{env.PROJECT_NAME}}.vst3

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.PROJECT_NAME}}_${{ matrix.runner }}
          path: ${{github.workspace}}/build/${{env.PROJECT_NAME}}_${{ matrix.runner }}.7z
          if-no-files-found: error
          retention-days: 1

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build
    outputs: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get Tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      with:
        strip_v: true

    - name: Checkout Source Code
      uses: actions/checkout@v2

    - name: Extract Release Notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1

    - name: Download All Artifacts
      uses: actions/download-artifact@v2

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "${{env.PROJECT_NAME}}*/*.7z"
        artifactContentType: application/zip
        token: ${{ secrets.GH_RELEASE }}
        name: ${{steps.tag.outputs.tag}}
        body: ${{ steps.extract-release-notes.outputs.release_notes }}
        prerelease: true