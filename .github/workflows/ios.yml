name: CMake iOS

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  PROJECT_NAME: ScaleRemapper
  
  APPLE_P12_CERT_BASE64: ${{ secrets.APPLE_P12_CERT_BASE64 }}
  APPLE_P12_PASSWORD: ${{ secrets.APPLE_P12_PASSWORD }}
  APPLE_PROVISION_PROFILE_BASE64: ${{ secrets.APPLE_PROVISION_PROFILE_BASE64 }}
  APPLE_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
  
  #CERTIFICATE_PATH: ${{ env.RUNNER_TEMP }}/build_certificate.p12
  TMP_CERT_PATH: signingCertificate.p12
  #PP_PATH: ${{ env.RUNNER_TEMP }}/build_pp.mobileprovision
  KEYCHAIN_FILENAME: app-signing.keychain-db

jobs:
  build:
    strategy:
      matrix:
        runner: ['macos']
    runs-on: ${{ matrix.runner }}-latest
    name: ${{ matrix.runner }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          token: ${{secrets.GH_PAT}}
          submodules: 'recursive'

      - name: Apple signing setup - Step 1 (create temporary keychain)
        run: |
          security create-keychain -p "${{ env.APPLE_KEYCHAIN_PASSWORD}}" ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }}
          security set-keychain-settings -lut 21600 ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }}
          security unlock-keychain -p "${{ env.APPLE_KEYCHAIN_PASSWORD}}" ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }}

      - name: Apple signing setup - Step 2 (import certificate and provisioning profile from secrets)
        run: |
          # echo -n "${{ env.APPLE_P12_CERT_BASE64 }}" | base64 --decode -o ${{ env.CERTIFICATE_PATH }}
          # echo -n "${{ env.APPLE_PROVISION_PROFILE_BASE64 }}" | base64 --decode -o ${{ env.PP_PATH }}

      - name: Apple signing setup - Step 3 (import certificate to keychain)
        run: |
          echo ${{ env.APPLE_P12_CERT_BASE64 }} | base64 --decode > ${{ runner.temp }}/${{ env.TMP_CERT_PATH }}
          security import ${{ runner.temp }}/${{ env.TMP_CERT_PATH }} \
                          -f pkcs12 \
                          -k ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }} \
                          -P "${{ env.APPLE_P12_PASSWORD }}" \
                          -T /usr/bin/codesign
          rm ${{ runner.temp }}/${{ env.TMP_CERT_PATH }}
          # security import ${{ env.CERTIFICATE_PATH }} -f pkcs12 -k ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }} -P "${ env.APPLE_P12_PASSWORD }}" -A -t cert 
          security list-keychain -d user -s ${{ runner.temp }}/${{ env.KEYCHAIN_FILENAME }}

      - name: Apple signing setup - Step 4 (apply provisioning profile)
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          # cp ${{ env.PP_PATH }} ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Set Up Yarn
        run: npm install -g yarn

      - name: Install UI Dependencies
        working-directory: ./ui
        run: yarn install

      - name: Build UI Bundle
        working-directory: ./ui
        run: yarn build

      - name: Patch Blocks
        working-directory: ./external/roli_blocks_basics
        run: git apply --reject --whitespace=fix -v ../../scripts/patches/roli.patch

      - name: Patch React-Juce
        working-directory: ./external/react-juce
        run: git apply --reject --whitespace=fix -v ../../scripts/patches/react.patch

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build-ios -G Xcode -D CMAKE_BUILD_TYPE=Release -D CMAKE_SYSTEM_NAME=iOS -D CMAKE_OSX_DEPLOYMENT_TARGET=15.0 -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY="Apple Development" -D CMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM=VN2HUYH284

      - name: Build
        run: cmake --build ${{github.workspace}}/build-ios --config=Release -- -allowProvisioningUpdates

      - name: Zip
        working-directory: ${{github.workspace}}/build-ios/${{env.PROJECT_NAME}}_artefacts/${{env.BUILD_TYPE}}
        run: cmake -E tar cv ${{github.workspace}}/build-ios/${{env.PROJECT_NAME}}_${{ matrix.runner }}.zip --format=zip Standalone/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.PROJECT_NAME}}_${{ matrix.runner }}
          path: ${{github.workspace}}/build/${{env.PROJECT_NAME}}_${{ matrix.runner }}.zip
          if-no-files-found: error
          retention-days: 1
