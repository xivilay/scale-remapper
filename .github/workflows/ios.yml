name: CMake iOS

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  BUILD_DIR: ${{ github.workspace }}/build-ios
  PROJECT_NAME: ScaleRemapper

jobs:
  build:
    strategy:
      matrix:
        runner: ['macos']
    runs-on: ${{ matrix.runner }}-latest
    name: ${{ matrix.runner }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: 'recursive'

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Set Up Yarn
        run: npm install -g yarn

      - name: Install UI Dependencies
        working-directory: ./ui
        run: yarn install

      - name: Build UI Bundle
        working-directory: ./ui
        run: yarn build

      - name: Patch Blocks
        working-directory: ./external/roli_blocks_basics
        run: git apply --reject --whitespace=fix -v ../../scripts/patches/roli.patch

      - name: Patch React-Juce
        working-directory: ./external/react-juce
        run: git apply --reject --whitespace=fix -v ../../scripts/patches/react.patch

      - name: Configure CMake
        run: |
          cmake \
          -B ${{ env.BUILD_DIR }} \
          -G Xcode \
          -D CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -D CMAKE_SYSTEM_NAME=iOS \
          -D CMAKE_OSX_DEPLOYMENT_TARGET=15.0 \
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY="" \
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_REQUIRED=NO \
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO

      - name: Build
        run: |
          cmake \
          --build ${{ env.BUILD_DIR }} \
          --config=${{ env.BUILD_TYPE }} \
          -- -allowProvisioningUpdates

      - name: Prepare payload for .ipa
        run: |
          mkdir -p ${{ runner.temp }}/Payload
          mv \
            ${{ env.BUILD_DIR }}/${{ env.PROJECT_NAME }}_artefacts/${{ env.BUILD_TYPE }}/Standalone/${{ env.PROJECT_NAME }}.app \
            ${{ runner.temp }}/Payload/${{ env.PROJECT_NAME }}.app

      - name: Zip
        working-directory: ${{ runner.temp }}
        run: cmake -E tar cv ${{ runner.temp }}/${{ env.PROJECT_NAME }}.ipa --format=zip Payload/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}_iOS
          path: ${{ runner.temp }}/${{ env.PROJECT_NAME }}.ipa
          if-no-files-found: error
          retention-days: 1
